// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.4
// source: user_org.proto

package modoki

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string               `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name           string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SystemRoleName string               `protobuf:"bytes,3,opt,name=system_role_name,json=systemRoleName,proto3" json:"system_role_name,omitempty"`
	CreatedAt      *timestamp.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamp.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_org_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_user_org_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_user_org_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetSystemRoleName() string {
	if x != nil {
		return x.SystemRoleName
	}
	return ""
}

func (x *User) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Organization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Organization) Reset() {
	*x = Organization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_org_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Organization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Organization) ProtoMessage() {}

func (x *Organization) ProtoReflect() protoreflect.Message {
	mi := &file_user_org_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Organization.ProtoReflect.Descriptor instead.
func (*Organization) Descriptor() ([]byte, []int) {
	return file_user_org_proto_rawDescGZIP(), []int{1}
}

func (x *Organization) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *Organization) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UserAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserAddRequest) Reset() {
	*x = UserAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_org_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAddRequest) ProtoMessage() {}

func (x *UserAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_org_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAddRequest.ProtoReflect.Descriptor instead.
func (*UserAddRequest) Descriptor() ([]byte, []int) {
	return file_user_org_proto_rawDescGZIP(), []int{2}
}

func (x *UserAddRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type UserAddResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserAddResponse) Reset() {
	*x = UserAddResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_org_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAddResponse) ProtoMessage() {}

func (x *UserAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_org_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAddResponse.ProtoReflect.Descriptor instead.
func (*UserAddResponse) Descriptor() ([]byte, []int) {
	return file_user_org_proto_rawDescGZIP(), []int{3}
}

func (x *UserAddResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type UserDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UserDeleteRequest) Reset() {
	*x = UserDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_org_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDeleteRequest) ProtoMessage() {}

func (x *UserDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_org_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDeleteRequest.ProtoReflect.Descriptor instead.
func (*UserDeleteRequest) Descriptor() ([]byte, []int) {
	return file_user_org_proto_rawDescGZIP(), []int{4}
}

func (x *UserDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UserDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserDeleteResponse) Reset() {
	*x = UserDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_org_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDeleteResponse) ProtoMessage() {}

func (x *UserDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_org_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDeleteResponse.ProtoReflect.Descriptor instead.
func (*UserDeleteResponse) Descriptor() ([]byte, []int) {
	return file_user_org_proto_rawDescGZIP(), []int{5}
}

type UserFindByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserFindByIDRequest) Reset() {
	*x = UserFindByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_org_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFindByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFindByIDRequest) ProtoMessage() {}

func (x *UserFindByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_org_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFindByIDRequest.ProtoReflect.Descriptor instead.
func (*UserFindByIDRequest) Descriptor() ([]byte, []int) {
	return file_user_org_proto_rawDescGZIP(), []int{6}
}

func (x *UserFindByIDRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UserFindByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserFindByIDResponse) Reset() {
	*x = UserFindByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_org_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFindByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFindByIDResponse) ProtoMessage() {}

func (x *UserFindByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_org_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFindByIDResponse.ProtoReflect.Descriptor instead.
func (*UserFindByIDResponse) Descriptor() ([]byte, []int) {
	return file_user_org_proto_rawDescGZIP(), []int{7}
}

func (x *UserFindByIDResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type OrganizationAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Organization *Organization `protobuf:"bytes,1,opt,name=organization,proto3" json:"organization,omitempty"`
}

func (x *OrganizationAddRequest) Reset() {
	*x = OrganizationAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_org_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrganizationAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganizationAddRequest) ProtoMessage() {}

func (x *OrganizationAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_org_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganizationAddRequest.ProtoReflect.Descriptor instead.
func (*OrganizationAddRequest) Descriptor() ([]byte, []int) {
	return file_user_org_proto_rawDescGZIP(), []int{8}
}

func (x *OrganizationAddRequest) GetOrganization() *Organization {
	if x != nil {
		return x.Organization
	}
	return nil
}

type OrganizationAddResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Organization *Organization `protobuf:"bytes,1,opt,name=organization,proto3" json:"organization,omitempty"`
}

func (x *OrganizationAddResponse) Reset() {
	*x = OrganizationAddResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_org_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrganizationAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganizationAddResponse) ProtoMessage() {}

func (x *OrganizationAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_org_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganizationAddResponse.ProtoReflect.Descriptor instead.
func (*OrganizationAddResponse) Descriptor() ([]byte, []int) {
	return file_user_org_proto_rawDescGZIP(), []int{9}
}

func (x *OrganizationAddResponse) GetOrganization() *Organization {
	if x != nil {
		return x.Organization
	}
	return nil
}

type OrganizationDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *OrganizationDeleteRequest) Reset() {
	*x = OrganizationDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_org_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrganizationDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganizationDeleteRequest) ProtoMessage() {}

func (x *OrganizationDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_org_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganizationDeleteRequest.ProtoReflect.Descriptor instead.
func (*OrganizationDeleteRequest) Descriptor() ([]byte, []int) {
	return file_user_org_proto_rawDescGZIP(), []int{10}
}

func (x *OrganizationDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type OrganizationDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OrganizationDeleteResponse) Reset() {
	*x = OrganizationDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_org_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrganizationDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganizationDeleteResponse) ProtoMessage() {}

func (x *OrganizationDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_org_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganizationDeleteResponse.ProtoReflect.Descriptor instead.
func (*OrganizationDeleteResponse) Descriptor() ([]byte, []int) {
	return file_user_org_proto_rawDescGZIP(), []int{11}
}

type OrganizationInviteUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TargetOrgId string `protobuf:"bytes,2,opt,name=target_org_id,json=targetOrgId,proto3" json:"target_org_id,omitempty"`
	RoleName    string `protobuf:"bytes,3,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
}

func (x *OrganizationInviteUserRequest) Reset() {
	*x = OrganizationInviteUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_org_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrganizationInviteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganizationInviteUserRequest) ProtoMessage() {}

func (x *OrganizationInviteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_org_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganizationInviteUserRequest.ProtoReflect.Descriptor instead.
func (*OrganizationInviteUserRequest) Descriptor() ([]byte, []int) {
	return file_user_org_proto_rawDescGZIP(), []int{12}
}

func (x *OrganizationInviteUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OrganizationInviteUserRequest) GetTargetOrgId() string {
	if x != nil {
		return x.TargetOrgId
	}
	return ""
}

func (x *OrganizationInviteUserRequest) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

type OrganizationInviteUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OrganizationInviteUserResponse) Reset() {
	*x = OrganizationInviteUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_org_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrganizationInviteUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganizationInviteUserResponse) ProtoMessage() {}

func (x *OrganizationInviteUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_org_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganizationInviteUserResponse.ProtoReflect.Descriptor instead.
func (*OrganizationInviteUserResponse) Descriptor() ([]byte, []int) {
	return file_user_org_proto_rawDescGZIP(), []int{13}
}

type OrganizationListUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *OrganizationListUserRequest) Reset() {
	*x = OrganizationListUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_org_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrganizationListUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganizationListUserRequest) ProtoMessage() {}

func (x *OrganizationListUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_org_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganizationListUserRequest.ProtoReflect.Descriptor instead.
func (*OrganizationListUserRequest) Descriptor() ([]byte, []int) {
	return file_user_org_proto_rawDescGZIP(), []int{14}
}

func (x *OrganizationListUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type OrganizationListUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Organizations []*User `protobuf:"bytes,1,rep,name=organizations,proto3" json:"organizations,omitempty"`
}

func (x *OrganizationListUserResponse) Reset() {
	*x = OrganizationListUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_org_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrganizationListUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganizationListUserResponse) ProtoMessage() {}

func (x *OrganizationListUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_org_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganizationListUserResponse.ProtoReflect.Descriptor instead.
func (*OrganizationListUserResponse) Descriptor() ([]byte, []int) {
	return file_user_org_proto_rawDescGZIP(), []int{15}
}

func (x *OrganizationListUserResponse) GetOrganizations() []*User {
	if x != nil {
		return x.Organizations
	}
	return nil
}

type GetRoleBindingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TargetId string `protobuf:"bytes,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
}

func (x *GetRoleBindingRequest) Reset() {
	*x = GetRoleBindingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_org_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleBindingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleBindingRequest) ProtoMessage() {}

func (x *GetRoleBindingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_org_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleBindingRequest.ProtoReflect.Descriptor instead.
func (*GetRoleBindingRequest) Descriptor() ([]byte, []int) {
	return file_user_org_proto_rawDescGZIP(), []int{16}
}

func (x *GetRoleBindingRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetRoleBindingRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

type GetRoleBindingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *GetRoleBindingResponse) Reset() {
	*x = GetRoleBindingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_org_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleBindingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleBindingResponse) ProtoMessage() {}

func (x *GetRoleBindingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_org_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleBindingResponse.ProtoReflect.Descriptor instead.
func (*GetRoleBindingResponse) Descriptor() ([]byte, []int) {
	return file_user_org_proto_rawDescGZIP(), []int{17}
}

func (x *GetRoleBindingResponse) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

var File_user_org_proto protoreflect.FileDescriptor

var file_user_org_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x06, 0x6d, 0x6f, 0x64, 0x6f, 0x6b, 0x69, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd3, 0x01, 0x0a, 0x04, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x39, 0x0a, 0x0c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x32, 0x0a, 0x0e, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x6f, 0x64,
	0x6f, 0x6b, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x33,
	0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x20, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x6d, 0x6f, 0x64, 0x6f, 0x6b, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x22, 0x23, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e,
	0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x38,
	0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x6f, 0x64, 0x6f, 0x6b, 0x69, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x52, 0x0a, 0x16, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x38, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x6f, 0x6b,
	0x69, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x17,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6d, 0x6f, 0x64, 0x6f, 0x6b, 0x69, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x2b, 0x0a, 0x19, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1c,
	0x0a, 0x1a, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x79, 0x0a, 0x1d,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x20, 0x0a, 0x1e, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x0a, 0x1b, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x52, 0x0a, 0x1c, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0d, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x6d, 0x6f, 0x64, 0x6f, 0x6b, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0d, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x4d, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x32, 0xa3, 0x05, 0x0a, 0x07, 0x55, 0x73,
	0x65, 0x72, 0x4f, 0x72, 0x67, 0x12, 0x3a, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x12, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x6f, 0x6b, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x6f, 0x6b,
	0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x43, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x6f, 0x6b, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x6f, 0x64,
	0x6f, 0x6b, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69,
	0x6e, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1b, 0x2e, 0x6d, 0x6f, 0x64, 0x6f, 0x6b, 0x69, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x6f, 0x6b, 0x69, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x52, 0x0a, 0x0f, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x64, 0x64, 0x12, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x6f, 0x6b, 0x69, 0x2e, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x6f, 0x6b, 0x69, 0x2e, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x12, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x6d, 0x6f,
	0x64, 0x6f, 0x6b, 0x69, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x6d, 0x6f, 0x64, 0x6f, 0x6b, 0x69, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x67, 0x0a, 0x16, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x6d,
	0x6f, 0x64, 0x6f, 0x6b, 0x69, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x6f, 0x64, 0x6f, 0x6b, 0x69, 0x2e, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x14, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x6d, 0x6f, 0x64, 0x6f, 0x6b, 0x69, 0x2e, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x6f, 0x64, 0x6f, 0x6b,
	0x69, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x1d, 0x2e, 0x6d, 0x6f, 0x64, 0x6f, 0x6b, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x6f, 0x6b, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x6f,
	0x64, 0x6f, 0x6b, 0x69, 0x2d, 0x70, 0x61, 0x61, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x6f, 0x6b, 0x69,
	0x2d, 0x6b, 0x38, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x3b, 0x6d, 0x6f, 0x64, 0x6f, 0x6b, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_org_proto_rawDescOnce sync.Once
	file_user_org_proto_rawDescData = file_user_org_proto_rawDesc
)

func file_user_org_proto_rawDescGZIP() []byte {
	file_user_org_proto_rawDescOnce.Do(func() {
		file_user_org_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_org_proto_rawDescData)
	})
	return file_user_org_proto_rawDescData
}

var file_user_org_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_user_org_proto_goTypes = []interface{}{
	(*User)(nil),                           // 0: modoki.User
	(*Organization)(nil),                   // 1: modoki.Organization
	(*UserAddRequest)(nil),                 // 2: modoki.UserAddRequest
	(*UserAddResponse)(nil),                // 3: modoki.UserAddResponse
	(*UserDeleteRequest)(nil),              // 4: modoki.UserDeleteRequest
	(*UserDeleteResponse)(nil),             // 5: modoki.UserDeleteResponse
	(*UserFindByIDRequest)(nil),            // 6: modoki.UserFindByIDRequest
	(*UserFindByIDResponse)(nil),           // 7: modoki.UserFindByIDResponse
	(*OrganizationAddRequest)(nil),         // 8: modoki.OrganizationAddRequest
	(*OrganizationAddResponse)(nil),        // 9: modoki.OrganizationAddResponse
	(*OrganizationDeleteRequest)(nil),      // 10: modoki.OrganizationDeleteRequest
	(*OrganizationDeleteResponse)(nil),     // 11: modoki.OrganizationDeleteResponse
	(*OrganizationInviteUserRequest)(nil),  // 12: modoki.OrganizationInviteUserRequest
	(*OrganizationInviteUserResponse)(nil), // 13: modoki.OrganizationInviteUserResponse
	(*OrganizationListUserRequest)(nil),    // 14: modoki.OrganizationListUserRequest
	(*OrganizationListUserResponse)(nil),   // 15: modoki.OrganizationListUserResponse
	(*GetRoleBindingRequest)(nil),          // 16: modoki.GetRoleBindingRequest
	(*GetRoleBindingResponse)(nil),         // 17: modoki.GetRoleBindingResponse
	(*timestamp.Timestamp)(nil),            // 18: google.protobuf.Timestamp
}
var file_user_org_proto_depIdxs = []int32{
	18, // 0: modoki.User.created_at:type_name -> google.protobuf.Timestamp
	18, // 1: modoki.User.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 2: modoki.UserAddRequest.user:type_name -> modoki.User
	0,  // 3: modoki.UserAddResponse.user:type_name -> modoki.User
	0,  // 4: modoki.UserFindByIDResponse.user:type_name -> modoki.User
	1,  // 5: modoki.OrganizationAddRequest.organization:type_name -> modoki.Organization
	1,  // 6: modoki.OrganizationAddResponse.organization:type_name -> modoki.Organization
	0,  // 7: modoki.OrganizationListUserResponse.organizations:type_name -> modoki.User
	2,  // 8: modoki.UserOrg.UserAdd:input_type -> modoki.UserAddRequest
	4,  // 9: modoki.UserOrg.UserDelete:input_type -> modoki.UserDeleteRequest
	6,  // 10: modoki.UserOrg.UserFindByID:input_type -> modoki.UserFindByIDRequest
	8,  // 11: modoki.UserOrg.OrganizationAdd:input_type -> modoki.OrganizationAddRequest
	10, // 12: modoki.UserOrg.OrganizationDelete:input_type -> modoki.OrganizationDeleteRequest
	12, // 13: modoki.UserOrg.OrganizationInviteUser:input_type -> modoki.OrganizationInviteUserRequest
	14, // 14: modoki.UserOrg.OrganizationListUser:input_type -> modoki.OrganizationListUserRequest
	16, // 15: modoki.UserOrg.GetRoleBinding:input_type -> modoki.GetRoleBindingRequest
	3,  // 16: modoki.UserOrg.UserAdd:output_type -> modoki.UserAddResponse
	5,  // 17: modoki.UserOrg.UserDelete:output_type -> modoki.UserDeleteResponse
	7,  // 18: modoki.UserOrg.UserFindByID:output_type -> modoki.UserFindByIDResponse
	9,  // 19: modoki.UserOrg.OrganizationAdd:output_type -> modoki.OrganizationAddResponse
	11, // 20: modoki.UserOrg.OrganizationDelete:output_type -> modoki.OrganizationDeleteResponse
	13, // 21: modoki.UserOrg.OrganizationInviteUser:output_type -> modoki.OrganizationInviteUserResponse
	15, // 22: modoki.UserOrg.OrganizationListUser:output_type -> modoki.OrganizationListUserResponse
	17, // 23: modoki.UserOrg.GetRoleBinding:output_type -> modoki.GetRoleBindingResponse
	16, // [16:24] is the sub-list for method output_type
	8,  // [8:16] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_user_org_proto_init() }
func file_user_org_proto_init() {
	if File_user_org_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_org_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_org_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Organization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_org_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_org_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAddResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_org_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_org_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_org_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFindByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_org_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFindByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_org_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrganizationAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_org_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrganizationAddResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_org_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrganizationDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_org_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrganizationDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_org_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrganizationInviteUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_org_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrganizationInviteUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_org_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrganizationListUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_org_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrganizationListUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_org_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleBindingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_org_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleBindingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_org_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_org_proto_goTypes,
		DependencyIndexes: file_user_org_proto_depIdxs,
		MessageInfos:      file_user_org_proto_msgTypes,
	}.Build()
	File_user_org_proto = out.File
	file_user_org_proto_rawDesc = nil
	file_user_org_proto_goTypes = nil
	file_user_org_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserOrgClient is the client API for UserOrg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserOrgClient interface {
	UserAdd(ctx context.Context, in *UserAddRequest, opts ...grpc.CallOption) (*UserAddResponse, error)
	UserDelete(ctx context.Context, in *UserDeleteRequest, opts ...grpc.CallOption) (*UserDeleteResponse, error)
	UserFindByID(ctx context.Context, in *UserFindByIDRequest, opts ...grpc.CallOption) (*UserFindByIDResponse, error)
	OrganizationAdd(ctx context.Context, in *OrganizationAddRequest, opts ...grpc.CallOption) (*OrganizationAddResponse, error)
	OrganizationDelete(ctx context.Context, in *OrganizationDeleteRequest, opts ...grpc.CallOption) (*OrganizationDeleteResponse, error)
	OrganizationInviteUser(ctx context.Context, in *OrganizationInviteUserRequest, opts ...grpc.CallOption) (*OrganizationInviteUserResponse, error)
	OrganizationListUser(ctx context.Context, in *OrganizationListUserRequest, opts ...grpc.CallOption) (*OrganizationListUserResponse, error)
	GetRoleBinding(ctx context.Context, in *GetRoleBindingRequest, opts ...grpc.CallOption) (*GetRoleBindingResponse, error)
}

type userOrgClient struct {
	cc grpc.ClientConnInterface
}

func NewUserOrgClient(cc grpc.ClientConnInterface) UserOrgClient {
	return &userOrgClient{cc}
}

func (c *userOrgClient) UserAdd(ctx context.Context, in *UserAddRequest, opts ...grpc.CallOption) (*UserAddResponse, error) {
	out := new(UserAddResponse)
	err := c.cc.Invoke(ctx, "/modoki.UserOrg/UserAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userOrgClient) UserDelete(ctx context.Context, in *UserDeleteRequest, opts ...grpc.CallOption) (*UserDeleteResponse, error) {
	out := new(UserDeleteResponse)
	err := c.cc.Invoke(ctx, "/modoki.UserOrg/UserDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userOrgClient) UserFindByID(ctx context.Context, in *UserFindByIDRequest, opts ...grpc.CallOption) (*UserFindByIDResponse, error) {
	out := new(UserFindByIDResponse)
	err := c.cc.Invoke(ctx, "/modoki.UserOrg/UserFindByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userOrgClient) OrganizationAdd(ctx context.Context, in *OrganizationAddRequest, opts ...grpc.CallOption) (*OrganizationAddResponse, error) {
	out := new(OrganizationAddResponse)
	err := c.cc.Invoke(ctx, "/modoki.UserOrg/OrganizationAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userOrgClient) OrganizationDelete(ctx context.Context, in *OrganizationDeleteRequest, opts ...grpc.CallOption) (*OrganizationDeleteResponse, error) {
	out := new(OrganizationDeleteResponse)
	err := c.cc.Invoke(ctx, "/modoki.UserOrg/OrganizationDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userOrgClient) OrganizationInviteUser(ctx context.Context, in *OrganizationInviteUserRequest, opts ...grpc.CallOption) (*OrganizationInviteUserResponse, error) {
	out := new(OrganizationInviteUserResponse)
	err := c.cc.Invoke(ctx, "/modoki.UserOrg/OrganizationInviteUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userOrgClient) OrganizationListUser(ctx context.Context, in *OrganizationListUserRequest, opts ...grpc.CallOption) (*OrganizationListUserResponse, error) {
	out := new(OrganizationListUserResponse)
	err := c.cc.Invoke(ctx, "/modoki.UserOrg/OrganizationListUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userOrgClient) GetRoleBinding(ctx context.Context, in *GetRoleBindingRequest, opts ...grpc.CallOption) (*GetRoleBindingResponse, error) {
	out := new(GetRoleBindingResponse)
	err := c.cc.Invoke(ctx, "/modoki.UserOrg/GetRoleBinding", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserOrgServer is the server API for UserOrg service.
type UserOrgServer interface {
	UserAdd(context.Context, *UserAddRequest) (*UserAddResponse, error)
	UserDelete(context.Context, *UserDeleteRequest) (*UserDeleteResponse, error)
	UserFindByID(context.Context, *UserFindByIDRequest) (*UserFindByIDResponse, error)
	OrganizationAdd(context.Context, *OrganizationAddRequest) (*OrganizationAddResponse, error)
	OrganizationDelete(context.Context, *OrganizationDeleteRequest) (*OrganizationDeleteResponse, error)
	OrganizationInviteUser(context.Context, *OrganizationInviteUserRequest) (*OrganizationInviteUserResponse, error)
	OrganizationListUser(context.Context, *OrganizationListUserRequest) (*OrganizationListUserResponse, error)
	GetRoleBinding(context.Context, *GetRoleBindingRequest) (*GetRoleBindingResponse, error)
}

// UnimplementedUserOrgServer can be embedded to have forward compatible implementations.
type UnimplementedUserOrgServer struct {
}

func (*UnimplementedUserOrgServer) UserAdd(context.Context, *UserAddRequest) (*UserAddResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserAdd not implemented")
}
func (*UnimplementedUserOrgServer) UserDelete(context.Context, *UserDeleteRequest) (*UserDeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserDelete not implemented")
}
func (*UnimplementedUserOrgServer) UserFindByID(context.Context, *UserFindByIDRequest) (*UserFindByIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserFindByID not implemented")
}
func (*UnimplementedUserOrgServer) OrganizationAdd(context.Context, *OrganizationAddRequest) (*OrganizationAddResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationAdd not implemented")
}
func (*UnimplementedUserOrgServer) OrganizationDelete(context.Context, *OrganizationDeleteRequest) (*OrganizationDeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationDelete not implemented")
}
func (*UnimplementedUserOrgServer) OrganizationInviteUser(context.Context, *OrganizationInviteUserRequest) (*OrganizationInviteUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationInviteUser not implemented")
}
func (*UnimplementedUserOrgServer) OrganizationListUser(context.Context, *OrganizationListUserRequest) (*OrganizationListUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationListUser not implemented")
}
func (*UnimplementedUserOrgServer) GetRoleBinding(context.Context, *GetRoleBindingRequest) (*GetRoleBindingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRoleBinding not implemented")
}

func RegisterUserOrgServer(s *grpc.Server, srv UserOrgServer) {
	s.RegisterService(&_UserOrg_serviceDesc, srv)
}

func _UserOrg_UserAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserAddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserOrgServer).UserAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/modoki.UserOrg/UserAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserOrgServer).UserAdd(ctx, req.(*UserAddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserOrg_UserDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserOrgServer).UserDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/modoki.UserOrg/UserDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserOrgServer).UserDelete(ctx, req.(*UserDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserOrg_UserFindByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFindByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserOrgServer).UserFindByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/modoki.UserOrg/UserFindByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserOrgServer).UserFindByID(ctx, req.(*UserFindByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserOrg_OrganizationAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrganizationAddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserOrgServer).OrganizationAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/modoki.UserOrg/OrganizationAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserOrgServer).OrganizationAdd(ctx, req.(*OrganizationAddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserOrg_OrganizationDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrganizationDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserOrgServer).OrganizationDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/modoki.UserOrg/OrganizationDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserOrgServer).OrganizationDelete(ctx, req.(*OrganizationDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserOrg_OrganizationInviteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrganizationInviteUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserOrgServer).OrganizationInviteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/modoki.UserOrg/OrganizationInviteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserOrgServer).OrganizationInviteUser(ctx, req.(*OrganizationInviteUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserOrg_OrganizationListUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrganizationListUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserOrgServer).OrganizationListUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/modoki.UserOrg/OrganizationListUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserOrgServer).OrganizationListUser(ctx, req.(*OrganizationListUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserOrg_GetRoleBinding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRoleBindingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserOrgServer).GetRoleBinding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/modoki.UserOrg/GetRoleBinding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserOrgServer).GetRoleBinding(ctx, req.(*GetRoleBindingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserOrg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "modoki.UserOrg",
	HandlerType: (*UserOrgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UserAdd",
			Handler:    _UserOrg_UserAdd_Handler,
		},
		{
			MethodName: "UserDelete",
			Handler:    _UserOrg_UserDelete_Handler,
		},
		{
			MethodName: "UserFindByID",
			Handler:    _UserOrg_UserFindByID_Handler,
		},
		{
			MethodName: "OrganizationAdd",
			Handler:    _UserOrg_OrganizationAdd_Handler,
		},
		{
			MethodName: "OrganizationDelete",
			Handler:    _UserOrg_OrganizationDelete_Handler,
		},
		{
			MethodName: "OrganizationInviteUser",
			Handler:    _UserOrg_OrganizationInviteUser_Handler,
		},
		{
			MethodName: "OrganizationListUser",
			Handler:    _UserOrg_OrganizationListUser_Handler,
		},
		{
			MethodName: "GetRoleBinding",
			Handler:    _UserOrg_GetRoleBinding_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user_org.proto",
}
