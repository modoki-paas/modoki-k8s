syntax = "proto3";
package modoki;

option go_package = "github.com/modoki-paas/modoki-k8s/api;modoki";

import "google/protobuf/timestamp.proto";

message User {
  string user_id = 1;
  string name = 2;
  string system_role_name = 3;

  google.protobuf.Timestamp created_at = 10;
  google.protobuf.Timestamp updated_at = 11;
}

message Organization {
  string org_id = 1;
  string name = 2;
}

message UserAddRequest { User user = 1; }

message UserAddResponse { User user = 1; }

message UserDeleteRequest { string id = 1; }

message UserDeleteResponse {}

message UserFindByIDRequest { string user_id = 1; }

message UserFindByIDResponse { User user = 1; }

message OrganizationAddRequest { Organization organization = 1; }

message OrganizationAddResponse { Organization organization = 1; }

message OrganizationDeleteRequest { string id = 1; }

message OrganizationDeleteResponse {}

message OrganizationInviteUserRequest {
  string user_id = 1;
  string target_org_id = 2;
  string role_name = 3;
}

message OrganizationInviteUserResponse {}

message OrganizationListUserRequest { string id = 1; }

message OrganizationListUserResponse { repeated User organizations = 1; }

message GetRoleBindingRequest {
  string user_id = 1;
  string target_id = 2;
}

message GetRoleBindingResponse { string role = 1; }

service UserOrg {
  rpc UserAdd(UserAddRequest) returns (UserAddResponse);
  rpc UserDelete(UserDeleteRequest) returns (UserDeleteResponse);
  rpc UserFindByID(UserFindByIDRequest) returns (UserFindByIDResponse);

  rpc OrganizationAdd(OrganizationAddRequest) returns (OrganizationAddResponse);
  rpc OrganizationDelete(OrganizationDeleteRequest)
      returns (OrganizationDeleteResponse);
  rpc OrganizationInviteUser(OrganizationInviteUserRequest)
      returns (OrganizationInviteUserResponse);
  rpc OrganizationListUser(OrganizationListUserRequest)
      returns (OrganizationListUserResponse);

  rpc GetRoleBinding(GetRoleBindingRequest) returns (GetRoleBindingResponse);
}